{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nvar KeyboardManager = function (_React$Component) {\n  _inherits(KeyboardManager, _React$Component);\n  var _super = _createSuper(KeyboardManager);\n  function KeyboardManager() {\n    var _this;\n    _classCallCheck(this, KeyboardManager);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"previouslyFocusedTextInput\", null);\n    _defineProperty(_assertThisInitialized(_this), \"startTimestamp\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"keyboardTimeout\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"clearKeyboardTimeout\", function () {\n      if (_this.keyboardTimeout !== undefined) {\n        clearTimeout(_this.keyboardTimeout);\n        _this.keyboardTimeout = undefined;\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handlePageChangeStart\", function () {\n      if (!_this.props.enabled) {\n        return;\n      }\n      _this.clearKeyboardTimeout();\n      var input = TextInput.State.currentlyFocusedInput ? TextInput.State.currentlyFocusedInput() : TextInput.State.currentlyFocusedField();\n      TextInput.State.blurTextInput(input);\n      _this.previouslyFocusedTextInput = input;\n      _this.startTimestamp = Date.now();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handlePageChangeConfirm\", function () {\n      if (!_this.props.enabled) {\n        return;\n      }\n      _this.clearKeyboardTimeout();\n      var input = _this.previouslyFocusedTextInput;\n      if (Platform.OS === 'android') {\n        Keyboard.dismiss();\n      } else if (input) {\n        TextInput.State.blurTextInput(input);\n      }\n      _this.previouslyFocusedTextInput = null;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handlePageChangeCancel\", function () {\n      if (!_this.props.enabled) {\n        return;\n      }\n      _this.clearKeyboardTimeout();\n      var input = _this.previouslyFocusedTextInput;\n      if (input) {\n        if (Date.now() - _this.startTimestamp < 100) {\n          _this.keyboardTimeout = setTimeout(function () {\n            TextInput.State.focusTextInput(input);\n            _this.previouslyFocusedTextInput = null;\n          }, 100);\n        } else {\n          TextInput.State.focusTextInput(input);\n          _this.previouslyFocusedTextInput = null;\n        }\n      }\n    });\n    return _this;\n  }\n  _createClass(KeyboardManager, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.clearKeyboardTimeout();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children({\n        onPageChangeStart: this.handlePageChangeStart,\n        onPageChangeConfirm: this.handlePageChangeConfirm,\n        onPageChangeCancel: this.handlePageChangeCancel\n      });\n    }\n  }]);\n  return KeyboardManager;\n}(React.Component);\nexport { KeyboardManager as default };","map":{"version":3,"names":["React","TextInput","Platform","Keyboard","KeyboardManager","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","keyboardTimeout","undefined","clearTimeout","props","enabled","clearKeyboardTimeout","input","State","currentlyFocusedInput","currentlyFocusedField","blurTextInput","previouslyFocusedTextInput","startTimestamp","Date","now","OS","dismiss","setTimeout","focusTextInput","_createClass","key","value","componentWillUnmount","render","children","onPageChangeStart","handlePageChangeStart","onPageChangeConfirm","handlePageChangeConfirm","onPageChangeCancel","handlePageChangeCancel","Component","default"],"sources":["/Users/luizclaudioarruda/Desktop/NLW_Happy2.0/mobile/node_modules/@react-navigation/stack/lib/module/views/KeyboardManager.tsx"],"sourcesContent":["import * as React from 'react';\nimport { TextInput, Platform, Keyboard } from 'react-native';\n\ntype Props = {\n  enabled: boolean;\n  children: (props: {\n    onPageChangeStart: () => void;\n    onPageChangeConfirm: () => void;\n    onPageChangeCancel: () => void;\n  }) => React.ReactNode;\n};\n\nexport default class KeyboardManager extends React.Component<Props> {\n  componentWillUnmount() {\n    this.clearKeyboardTimeout();\n  }\n\n  // Numeric id of the previously focused text input\n  // When a gesture didn't change the tab, we can restore the focused input with this\n  private previouslyFocusedTextInput: any | null = null;\n  private startTimestamp: number = 0;\n  private keyboardTimeout: any;\n\n  private clearKeyboardTimeout = () => {\n    if (this.keyboardTimeout !== undefined) {\n      clearTimeout(this.keyboardTimeout);\n      this.keyboardTimeout = undefined;\n    }\n  };\n\n  private handlePageChangeStart = () => {\n    if (!this.props.enabled) {\n      return;\n    }\n\n    this.clearKeyboardTimeout();\n\n    const input: any = TextInput.State.currentlyFocusedInput\n      ? TextInput.State.currentlyFocusedInput()\n      : TextInput.State.currentlyFocusedField();\n\n    // When a page change begins, blur the currently focused input\n    TextInput.State.blurTextInput(input);\n\n    // Store the id of this input so we can refocus it if change was cancelled\n    this.previouslyFocusedTextInput = input;\n\n    // Store timestamp for touch start\n    this.startTimestamp = Date.now();\n  };\n\n  private handlePageChangeConfirm = () => {\n    if (!this.props.enabled) {\n      return;\n    }\n\n    this.clearKeyboardTimeout();\n\n    const input = this.previouslyFocusedTextInput;\n\n    if (Platform.OS === 'android') {\n      Keyboard.dismiss();\n    } else if (input) {\n      TextInput.State.blurTextInput(input);\n    }\n\n    // Cleanup the ID on successful page change\n    this.previouslyFocusedTextInput = null;\n  };\n\n  private handlePageChangeCancel = () => {\n    if (!this.props.enabled) {\n      return;\n    }\n\n    this.clearKeyboardTimeout();\n\n    // The page didn't change, we should restore the focus of text input\n    const input = this.previouslyFocusedTextInput;\n\n    if (input) {\n      // If the interaction was super short we should make sure keyboard won't hide again.\n\n      // Too fast input refocus will result only in keyboard flashing on screen and hiding right away.\n      // During first ~100ms keyboard will be dismissed no matter what,\n      // so we have to make sure it won't interrupt input refocus logic.\n      // That's why when the interaction is shorter than 100ms we add delay so it won't hide once again.\n      // Subtracting timestamps makes us sure the delay is executed only when needed.\n      if (Date.now() - this.startTimestamp < 100) {\n        this.keyboardTimeout = setTimeout(() => {\n          TextInput.State.focusTextInput(input);\n          this.previouslyFocusedTextInput = null;\n        }, 100);\n      } else {\n        TextInput.State.focusTextInput(input);\n        this.previouslyFocusedTextInput = null;\n      }\n    }\n  };\n\n  render() {\n    return this.props.children({\n      onPageChangeStart: this.handlePageChangeStart,\n      onPageChangeConfirm: this.handlePageChangeConfirm,\n      onPageChangeCancel: this.handlePageChangeCancel,\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}