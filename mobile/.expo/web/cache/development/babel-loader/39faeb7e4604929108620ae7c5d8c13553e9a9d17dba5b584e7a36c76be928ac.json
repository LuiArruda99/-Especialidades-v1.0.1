{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _stateToPropMappings;\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport findNodeHandleRN from \"react-native-web/dist/exports/findNodeHandle\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport deepEqual from 'fbjs/lib/areEqual';\nimport RNGestureHandlerModule from \"./RNGestureHandlerModule\";\nimport State from \"./State\";\nfunction findNodeHandle(node) {\n  if (Platform.OS === 'web') return node;\n  return findNodeHandleRN(node);\n}\nvar _NativeModules$UIMana = NativeModules.UIManager,\n  UIManager = _NativeModules$UIMana === void 0 ? {} : _NativeModules$UIMana;\nvar customGHEventsConfig = {\n  onGestureHandlerEvent: {\n    registrationName: 'onGestureHandlerEvent'\n  },\n  onGestureHandlerStateChange: {\n    registrationName: 'onGestureHandlerStateChange'\n  }\n};\nUIManager.genericDirectEventTypes = _objectSpread(_objectSpread({}, UIManager.genericDirectEventTypes), customGHEventsConfig);\nif (UIManager.getConstants) {\n  UIManager.getConstants().genericDirectEventTypes = _objectSpread(_objectSpread({}, UIManager.getConstants().genericDirectEventTypes), customGHEventsConfig);\n}\nvar _UIManager$setJSRespo = UIManager.setJSResponder,\n  oldSetJSResponder = _UIManager$setJSRespo === void 0 ? function () {} : _UIManager$setJSRespo,\n  _UIManager$clearJSRes = UIManager.clearJSResponder,\n  oldClearJSResponder = _UIManager$clearJSRes === void 0 ? function () {} : _UIManager$clearJSRes;\nUIManager.setJSResponder = function (tag, blockNativeResponder) {\n  RNGestureHandlerModule.handleSetJSResponder(tag, blockNativeResponder);\n  oldSetJSResponder(tag, blockNativeResponder);\n};\nUIManager.clearJSResponder = function () {\n  RNGestureHandlerModule.handleClearJSResponder();\n  oldClearJSResponder();\n};\nvar handlerTag = 1;\nvar handlerIDToTag = {};\nfunction isConfigParam(param, name) {\n  return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n}\nfunction filterConfig(props, validProps) {\n  var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var res = _objectSpread({}, defaults);\n  Object.keys(validProps).forEach(function (key) {\n    var value = props[key];\n    if (isConfigParam(value, key)) {\n      var _value = props[key];\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        _value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop') {\n        if (typeof _value !== 'object') {\n          _value = {\n            top: _value,\n            left: _value,\n            bottom: _value,\n            right: _value\n          };\n        }\n      }\n      res[key] = _value;\n    }\n  });\n  return res;\n}\nfunction transformIntoHandlerTags(handlerIDs) {\n  if (!Array.isArray(handlerIDs)) {\n    handlerIDs = [handlerIDs];\n  }\n  if (Platform.OS === 'web') {\n    return handlerIDs.map(function (_ref) {\n      var current = _ref.current;\n      return current;\n    }).filter(function (handle) {\n      return handle;\n    });\n  }\n  return handlerIDs.map(function (handlerID) {\n    return handlerIDToTag[handlerID] || handlerID.current && handlerID.current._handlerTag || -1;\n  }).filter(function (handlerTag) {\n    return handlerTag > 0;\n  });\n}\nfunction hasUnresolvedRefs(props) {\n  var extract = function extract(refs) {\n    if (!Array.isArray(refs)) {\n      return refs && refs.current === null;\n    }\n    return refs.some(function (r) {\n      return r && r.current === null;\n    });\n  };\n  return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n}\nvar stateToPropMappings = (_stateToPropMappings = {}, _defineProperty(_stateToPropMappings, State.BEGAN, 'onBegan'), _defineProperty(_stateToPropMappings, State.FAILED, 'onFailed'), _defineProperty(_stateToPropMappings, State.CANCELLED, 'onCancelled'), _defineProperty(_stateToPropMappings, State.ACTIVE, 'onActivated'), _defineProperty(_stateToPropMappings, State.END, 'onEnded'), _stateToPropMappings);\nexport default function createHandler(handlerName) {\n  var propTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var transformProps = arguments.length > 3 ? arguments[3] : undefined;\n  var customNativeProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var Handler = function (_React$Component) {\n    _inherits(Handler, _React$Component);\n    var _super = _createSuper(Handler);\n    function Handler(props) {\n      var _this;\n      _classCallCheck(this, Handler);\n      _this = _super.call(this, props);\n      _this._onGestureHandlerEvent = function (event) {\n        if (event.nativeEvent.handlerTag === _this._handlerTag) {\n          _this.props.onGestureEvent && _this.props.onGestureEvent(event);\n        } else {\n          _this.props.onGestureHandlerEvent && _this.props.onGestureHandlerEvent(event);\n        }\n      };\n      _this._onGestureHandlerStateChange = function (event) {\n        if (event.nativeEvent.handlerTag === _this._handlerTag) {\n          _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(event);\n          var stateEventName = stateToPropMappings[event.nativeEvent.state];\n          if (typeof _this.props[stateEventName] === 'function') {\n            _this.props[stateEventName](event);\n          }\n        } else {\n          _this.props.onGestureHandlerStateChange && _this.props.onGestureHandlerStateChange(event);\n        }\n      };\n      _this._refHandler = function (node) {\n        _this._viewNode = node;\n        var child = React.Children.only(_this.props.children);\n        var ref = child.ref;\n        if (ref !== null) {\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        }\n      };\n      _this._createGestureHandler = function (newConfig) {\n        _this._config = newConfig;\n        RNGestureHandlerModule.createGestureHandler(handlerName, _this._handlerTag, newConfig);\n      };\n      _this._attachGestureHandler = function (newViewTag) {\n        _this._viewTag = newViewTag;\n        RNGestureHandlerModule.attachGestureHandler(_this._handlerTag, newViewTag);\n      };\n      _this._updateGestureHandler = function (newConfig) {\n        _this._config = newConfig;\n        RNGestureHandlerModule.updateGestureHandler(_this._handlerTag, newConfig);\n      };\n      _this._handlerTag = handlerTag++;\n      _this._config = {};\n      if (props.id) {\n        if (handlerIDToTag[props.id] !== undefined) {\n          throw new Error(\"Handler with ID \\\"\" + props.id + \"\\\" already registered\");\n        }\n        handlerIDToTag[props.id] = _this._handlerTag;\n      }\n      return _this;\n    }\n    _createClass(Handler, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        RNGestureHandlerModule.dropGestureHandler(this._handlerTag);\n        if (this._updateEnqueued) {\n          clearImmediate(this._updateEnqueued);\n        }\n        if (this.props.id) {\n          delete handlerIDToTag[this.props.id];\n        }\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n        if (hasUnresolvedRefs(this.props)) {\n          this._updateEnqueued = setImmediate(function () {\n            _this2._updateEnqueued = null;\n            _this2._update();\n          });\n        }\n        this._createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread(_objectSpread({}, this.constructor.propTypes), customNativeProps), config));\n        this._attachGestureHandler(findNodeHandle(this._viewNode));\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        var viewTag = findNodeHandle(this._viewNode);\n        if (this._viewTag !== viewTag) {\n          this._attachGestureHandler(viewTag);\n        }\n        this._update();\n      }\n    }, {\n      key: \"_update\",\n      value: function _update() {\n        var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread(_objectSpread({}, this.constructor.propTypes), customNativeProps), config);\n        if (!deepEqual(this._config, newConfig)) {\n          this._updateGestureHandler(newConfig);\n        }\n      }\n    }, {\n      key: \"setNativeProps\",\n      value: function setNativeProps(updates) {\n        var mergedProps = _objectSpread(_objectSpread({}, this.props), updates);\n        var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, _objectSpread(_objectSpread({}, this.constructor.propTypes), customNativeProps), config);\n        this._updateGestureHandler(newConfig);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var gestureEventHandler = this._onGestureHandlerEvent;\n        var _this$props = this.props,\n          onGestureEvent = _this$props.onGestureEvent,\n          onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n        if (onGestureEvent && typeof onGestureEvent !== 'function') {\n          if (onGestureHandlerEvent) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureEventHandler = this.props.onGestureEvent;\n        } else {\n          if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        var gestureStateEventHandler = this._onGestureHandlerStateChange;\n        var _this$props2 = this.props,\n          onHandlerStateChange = _this$props2.onHandlerStateChange,\n          onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n        if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n          if (onGestureHandlerStateChange) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureStateEventHandler = this.props.onHandlerStateChange;\n        } else {\n          if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        var child = React.Children.only(this.props.children);\n        var grandChildren = child.props.children;\n        if (Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n          grandChildren = React.Children.toArray(grandChildren);\n          grandChildren.push(Touchable.renderDebugView({\n            color: 'mediumspringgreen',\n            hitSlop: child.props.hitSlop\n          }));\n        }\n        return React.cloneElement(child, {\n          ref: this._refHandler,\n          collapsable: false,\n          onGestureHandlerEvent: gestureEventHandler,\n          onGestureHandlerStateChange: gestureStateEventHandler\n        }, grandChildren);\n      }\n    }]);\n    return Handler;\n  }(React.Component);\n  Handler.displayName = handlerName;\n  Handler.propTypes = propTypes;\n  return Handler;\n}","map":{"version":3,"names":["React","findNodeHandleRN","NativeModules","Touchable","Platform","deepEqual","RNGestureHandlerModule","State","findNodeHandle","node","OS","_NativeModules$UIMana","UIManager","customGHEventsConfig","onGestureHandlerEvent","registrationName","onGestureHandlerStateChange","genericDirectEventTypes","_objectSpread","getConstants","_UIManager$setJSRespo","setJSResponder","oldSetJSResponder","_UIManager$clearJSRes","clearJSResponder","oldClearJSResponder","tag","blockNativeResponder","handleSetJSResponder","handleClearJSResponder","handlerTag","handlerIDToTag","isConfigParam","param","name","undefined","Object","filterConfig","props","validProps","defaults","arguments","length","res","keys","forEach","key","value","transformIntoHandlerTags","top","left","bottom","right","handlerIDs","Array","isArray","map","_ref","current","filter","handle","handlerID","_handlerTag","hasUnresolvedRefs","extract","refs","some","r","stateToPropMappings","_stateToPropMappings","_defineProperty","BEGAN","FAILED","CANCELLED","ACTIVE","END","createHandler","handlerName","propTypes","config","transformProps","customNativeProps","Handler","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","_onGestureHandlerEvent","event","nativeEvent","onGestureEvent","_onGestureHandlerStateChange","onHandlerStateChange","stateEventName","state","_refHandler","_viewNode","child","Children","only","children","ref","_createGestureHandler","newConfig","_config","createGestureHandler","_attachGestureHandler","newViewTag","_viewTag","attachGestureHandler","_updateGestureHandler","updateGestureHandler","id","Error","_createClass","componentWillUnmount","dropGestureHandler","_updateEnqueued","clearImmediate","componentDidMount","_this2","setImmediate","_update","constructor","componentDidUpdate","viewTag","setNativeProps","updates","mergedProps","render","gestureEventHandler","_this$props","gestureStateEventHandler","_this$props2","grandChildren","TOUCH_TARGET_DEBUG","type","displayName","toArray","push","renderDebugView","color","hitSlop","cloneElement","collapsable","Component"],"sources":["/Users/luizclaudioarruda/Desktop/NLW_Happy2.0/mobile/node_modules/react-native-gesture-handler/createHandler.js"],"sourcesContent":["import React from 'react';\nimport {\n  findNodeHandle as findNodeHandleRN,\n  NativeModules,\n  Touchable,\n  Platform,\n} from 'react-native';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport RNGestureHandlerModule from './RNGestureHandlerModule';\nimport State from './State';\n\nfunction findNodeHandle(node) {\n  if (Platform.OS === 'web') return node;\n  return findNodeHandleRN(node);\n}\n\nconst { UIManager = {} } = NativeModules;\n\nconst customGHEventsConfig = {\n  onGestureHandlerEvent: { registrationName: 'onGestureHandlerEvent' },\n  onGestureHandlerStateChange: {\n    registrationName: 'onGestureHandlerStateChange',\n  },\n};\n\n// Add gesture specific events to genericDirectEventTypes object exported from UIManager\n// native module.\n// Once new event types are registered with react it is possible to dispatch these\n// events to all kind of native views.\nUIManager.genericDirectEventTypes = {\n  ...UIManager.genericDirectEventTypes,\n  ...customGHEventsConfig,\n};\n// In newer versions of RN the `genericDirectEventTypes` is located in the object\n// returned by UIManager.getConstants(), we need to add it there as well to make\n// it compatible with RN 61+\nif (UIManager.getConstants) {\n  UIManager.getConstants().genericDirectEventTypes = {\n    ...UIManager.getConstants().genericDirectEventTypes,\n    ...customGHEventsConfig,\n  };\n}\n\n// Wrap JS responder calls and notify gesture handler manager\nconst {\n  setJSResponder: oldSetJSResponder = () => {},\n  clearJSResponder: oldClearJSResponder = () => {},\n} = UIManager;\nUIManager.setJSResponder = (tag, blockNativeResponder) => {\n  RNGestureHandlerModule.handleSetJSResponder(tag, blockNativeResponder);\n  oldSetJSResponder(tag, blockNativeResponder);\n};\nUIManager.clearJSResponder = () => {\n  RNGestureHandlerModule.handleClearJSResponder();\n  oldClearJSResponder();\n};\n\nlet handlerTag = 1;\nconst handlerIDToTag = {};\n\nfunction isConfigParam(param, name) {\n  // param !== Object(param) returns false if `param` is a function\n  // or an object and returns true if `param` is null\n  return (\n    param !== undefined &&\n    (param !== Object(param) || !('__isNative' in param)) &&\n    name !== 'onHandlerStateChange' &&\n    name !== 'onGestureEvent'\n  );\n}\n\nfunction filterConfig(props, validProps, defaults = {}) {\n  const res = { ...defaults };\n  Object.keys(validProps).forEach(key => {\n    const value = props[key];\n    if (isConfigParam(value, key)) {\n      let value = props[key];\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop') {\n        if (typeof value !== 'object') {\n          value = { top: value, left: value, bottom: value, right: value };\n        }\n      }\n      res[key] = value;\n    }\n  });\n  return res;\n}\n\nfunction transformIntoHandlerTags(handlerIDs) {\n  if (!Array.isArray(handlerIDs)) {\n    handlerIDs = [handlerIDs];\n  }\n\n  if (Platform.OS === 'web') {\n    return handlerIDs.map(({ current }) => current).filter(handle => handle);\n  }\n  // converts handler string IDs into their numeric tags\n  return handlerIDs\n    .map(\n      handlerID =>\n        handlerIDToTag[handlerID] ||\n        (handlerID.current && handlerID.current._handlerTag) ||\n        -1\n    )\n    .filter(handlerTag => handlerTag > 0);\n}\n\nfunction hasUnresolvedRefs(props) {\n  const extract = refs => {\n    if (!Array.isArray(refs)) {\n      return refs && refs.current === null;\n    }\n    return refs.some(r => r && r.current === null);\n  };\n  return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n}\n\nconst stateToPropMappings = {\n  [State.BEGAN]: 'onBegan',\n  [State.FAILED]: 'onFailed',\n  [State.CANCELLED]: 'onCancelled',\n  [State.ACTIVE]: 'onActivated',\n  [State.END]: 'onEnded',\n};\n\nexport default function createHandler(\n  handlerName,\n  propTypes = {},\n  config = {},\n  transformProps,\n  customNativeProps = {}\n) {\n  class Handler extends React.Component {\n    static displayName = handlerName;\n\n    static propTypes = propTypes;\n\n    constructor(props) {\n      super(props);\n      this._handlerTag = handlerTag++;\n      this._config = {};\n      if (props.id) {\n        if (handlerIDToTag[props.id] !== undefined) {\n          throw new Error(`Handler with ID \"${props.id}\" already registered`);\n        }\n        handlerIDToTag[props.id] = this._handlerTag;\n      }\n    }\n\n    _onGestureHandlerEvent = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onGestureEvent && this.props.onGestureEvent(event);\n      } else {\n        this.props.onGestureHandlerEvent &&\n          this.props.onGestureHandlerEvent(event);\n      }\n    };\n\n    _onGestureHandlerStateChange = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onHandlerStateChange &&\n          this.props.onHandlerStateChange(event);\n\n        const stateEventName = stateToPropMappings[event.nativeEvent.state];\n        if (typeof this.props[stateEventName] === 'function') {\n          this.props[stateEventName](event);\n        }\n      } else {\n        this.props.onGestureHandlerStateChange &&\n          this.props.onGestureHandlerStateChange(event);\n      }\n    };\n\n    _refHandler = node => {\n      this._viewNode = node;\n\n      const child = React.Children.only(this.props.children);\n      const { ref } = child;\n      if (ref !== null) {\n        if (typeof ref === 'function') {\n          ref(node);\n        } else {\n          ref.current = node;\n        }\n      }\n    };\n\n    _createGestureHandler = newConfig => {\n      this._config = newConfig;\n\n      RNGestureHandlerModule.createGestureHandler(\n        handlerName,\n        this._handlerTag,\n        newConfig\n      );\n    };\n\n    _attachGestureHandler = newViewTag => {\n      this._viewTag = newViewTag;\n\n      RNGestureHandlerModule.attachGestureHandler(this._handlerTag, newViewTag);\n    };\n\n    _updateGestureHandler = newConfig => {\n      this._config = newConfig;\n\n      RNGestureHandlerModule.updateGestureHandler(this._handlerTag, newConfig);\n    };\n\n    componentWillUnmount() {\n      RNGestureHandlerModule.dropGestureHandler(this._handlerTag);\n      if (this._updateEnqueued) {\n        clearImmediate(this._updateEnqueued);\n      }\n      if (this.props.id) {\n        delete handlerIDToTag[this.props.id];\n      }\n    }\n\n    componentDidMount() {\n      if (hasUnresolvedRefs(this.props)) {\n        // If there are unresolved refs (e.g. \".current\" has not yet been set)\n        // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n        // _update method that will try to update native handler props using\n        // setImmediate. This makes it so _update function gets called after all\n        // react components are mounted and we expect the missing ref object to\n        // be resolved by then.\n        this._updateEnqueued = setImmediate(() => {\n          this._updateEnqueued = null;\n          this._update();\n        });\n      }\n\n      this._createGestureHandler(\n        filterConfig(\n          transformProps ? transformProps(this.props) : this.props,\n          { ...this.constructor.propTypes, ...customNativeProps },\n          config\n        )\n      );\n      this._attachGestureHandler(findNodeHandle(this._viewNode));\n    }\n\n    componentDidUpdate() {\n      const viewTag = findNodeHandle(this._viewNode);\n      if (this._viewTag !== viewTag) {\n        this._attachGestureHandler(viewTag);\n      }\n      this._update();\n    }\n\n    _update() {\n      const newConfig = filterConfig(\n        transformProps ? transformProps(this.props) : this.props,\n        { ...this.constructor.propTypes, ...customNativeProps },\n        config\n      );\n      if (!deepEqual(this._config, newConfig)) {\n        this._updateGestureHandler(newConfig);\n      }\n    }\n\n    setNativeProps(updates) {\n      const mergedProps = { ...this.props, ...updates };\n      const newConfig = filterConfig(\n        transformProps ? transformProps(mergedProps) : mergedProps,\n        { ...this.constructor.propTypes, ...customNativeProps },\n        config\n      );\n      this._updateGestureHandler(newConfig);\n    }\n\n    render() {\n      let gestureEventHandler = this._onGestureHandlerEvent;\n      const { onGestureEvent, onGestureHandlerEvent } = this.props;\n      if (onGestureEvent && typeof onGestureEvent !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerEvent) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureEventHandler = this.props.onGestureEvent;\n      } else {\n        if (\n          onGestureHandlerEvent &&\n          typeof onGestureHandlerEvent !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n\n      let gestureStateEventHandler = this._onGestureHandlerStateChange;\n      const { onHandlerStateChange, onGestureHandlerStateChange } = this.props;\n      if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerStateChange) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureStateEventHandler = this.props.onHandlerStateChange;\n      } else {\n        if (\n          onGestureHandlerStateChange &&\n          typeof onGestureHandlerStateChange !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n\n      const child = React.Children.only(this.props.children);\n      let grandChildren = child.props.children;\n      if (\n        Touchable.TOUCH_TARGET_DEBUG &&\n        child.type &&\n        (child.type === 'RNGestureHandlerButton' ||\n          child.type.name === 'View' ||\n          child.type.displayName === 'View')\n      ) {\n        grandChildren = React.Children.toArray(grandChildren);\n        grandChildren.push(\n          Touchable.renderDebugView({\n            color: 'mediumspringgreen',\n            hitSlop: child.props.hitSlop,\n          })\n        );\n      }\n      return React.cloneElement(\n        child,\n        {\n          ref: this._refHandler,\n          collapsable: false,\n          onGestureHandlerEvent: gestureEventHandler,\n          onGestureHandlerStateChange: gestureStateEventHandler,\n        },\n        grandChildren\n      );\n    }\n  }\n  return Handler;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}