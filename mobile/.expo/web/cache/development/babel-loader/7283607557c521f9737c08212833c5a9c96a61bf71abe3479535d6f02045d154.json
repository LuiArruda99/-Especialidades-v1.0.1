{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { PanGestureHandler, TapGestureHandler, State } from \"./GestureHandler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DRAG_TOSS = 0.05;\nvar Swipeable = function (_Component) {\n  _inherits(Swipeable, _Component);\n  var _super = _createSuper(Swipeable);\n  function Swipeable(_props) {\n    var _this;\n    _classCallCheck(this, Swipeable);\n    _this = _super.call(this, _props);\n    _this._updateAnimatedEvent = function (props, state) {\n      var friction = props.friction,\n        overshootFriction = props.overshootFriction,\n        useNativeAnimations = props.useNativeAnimations;\n      var dragX = state.dragX,\n        rowTranslation = state.rowTranslation,\n        _state$leftWidth = state.leftWidth,\n        leftWidth = _state$leftWidth === void 0 ? 0 : _state$leftWidth,\n        _state$rowWidth = state.rowWidth,\n        rowWidth = _state$rowWidth === void 0 ? 0 : _state$rowWidth;\n      var _state$rightOffset = state.rightOffset,\n        rightOffset = _state$rightOffset === void 0 ? rowWidth : _state$rightOffset;\n      var rightWidth = Math.max(0, rowWidth - rightOffset);\n      var _props$overshootLeft = props.overshootLeft,\n        overshootLeft = _props$overshootLeft === void 0 ? leftWidth > 0 : _props$overshootLeft,\n        _props$overshootRight = props.overshootRight,\n        overshootRight = _props$overshootRight === void 0 ? rightWidth > 0 : _props$overshootRight;\n      var transX = Animated.add(rowTranslation, dragX.interpolate({\n        inputRange: [0, friction],\n        outputRange: [0, 1]\n      })).interpolate({\n        inputRange: [-rightWidth - (overshootRight ? 1 : overshootFriction), -rightWidth, leftWidth, leftWidth + (overshootLeft ? 1 : overshootFriction)],\n        outputRange: [-rightWidth - (overshootRight || overshootFriction > 1 ? 1 : 0), -rightWidth, leftWidth, leftWidth + (overshootLeft || overshootFriction > 1 ? 1 : 0)]\n      });\n      _this._transX = transX;\n      _this._showLeftAction = leftWidth > 0 ? transX.interpolate({\n        inputRange: [-1, 0, leftWidth],\n        outputRange: [0, 0, 1]\n      }) : new Animated.Value(0);\n      _this._leftActionTranslate = _this._showLeftAction.interpolate({\n        inputRange: [0, Number.MIN_VALUE],\n        outputRange: [-10000, 0],\n        extrapolate: 'clamp'\n      });\n      _this._showRightAction = rightWidth > 0 ? transX.interpolate({\n        inputRange: [-rightWidth, 0, 1],\n        outputRange: [1, 0, 0]\n      }) : new Animated.Value(0);\n      _this._rightActionTranslate = _this._showRightAction.interpolate({\n        inputRange: [0, Number.MIN_VALUE],\n        outputRange: [-10000, 0],\n        extrapolate: 'clamp'\n      });\n    };\n    _this._onTapHandlerStateChange = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      if (nativeEvent.oldState === State.ACTIVE) {\n        _this.close();\n      }\n    };\n    _this._onHandlerStateChange = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      if (nativeEvent.oldState === State.ACTIVE) {\n        _this._handleRelease(nativeEvent);\n      }\n    };\n    _this._handleRelease = function (nativeEvent) {\n      var velocityX = nativeEvent.velocityX,\n        dragX = nativeEvent.translationX;\n      var _this$state = _this.state,\n        _this$state$leftWidth = _this$state.leftWidth,\n        leftWidth = _this$state$leftWidth === void 0 ? 0 : _this$state$leftWidth,\n        _this$state$rowWidth = _this$state.rowWidth,\n        rowWidth = _this$state$rowWidth === void 0 ? 0 : _this$state$rowWidth,\n        rowState = _this$state.rowState;\n      var _this$state$rightOffs = _this.state.rightOffset,\n        rightOffset = _this$state$rightOffs === void 0 ? rowWidth : _this$state$rightOffs;\n      var rightWidth = rowWidth - rightOffset;\n      var _this$props = _this.props,\n        friction = _this$props.friction,\n        _this$props$leftThres = _this$props.leftThreshold,\n        leftThreshold = _this$props$leftThres === void 0 ? leftWidth / 2 : _this$props$leftThres,\n        _this$props$rightThre = _this$props.rightThreshold,\n        rightThreshold = _this$props$rightThre === void 0 ? rightWidth / 2 : _this$props$rightThre;\n      var startOffsetX = _this._currentOffset() + dragX / friction;\n      var translationX = (dragX + DRAG_TOSS * velocityX) / friction;\n      var toValue = 0;\n      if (rowState === 0) {\n        if (translationX > leftThreshold) {\n          toValue = leftWidth;\n        } else if (translationX < -rightThreshold) {\n          toValue = -rightWidth;\n        }\n      } else if (rowState === 1) {\n        if (translationX > -leftThreshold) {\n          toValue = leftWidth;\n        }\n      } else {\n        if (translationX < rightThreshold) {\n          toValue = -rightWidth;\n        }\n      }\n      _this._animateRow(startOffsetX, toValue, velocityX / friction);\n    };\n    _this._animateRow = function (fromValue, toValue, velocityX) {\n      var _this$state2 = _this.state,\n        dragX = _this$state2.dragX,\n        rowTranslation = _this$state2.rowTranslation;\n      dragX.setValue(0);\n      rowTranslation.setValue(fromValue);\n      _this.setState({\n        rowState: Math.sign(toValue)\n      });\n      Animated.spring(rowTranslation, _objectSpread({\n        restSpeedThreshold: 1.7,\n        restDisplacementThreshold: 0.4,\n        velocity: velocityX,\n        bounciness: 0,\n        toValue: toValue,\n        useNativeDriver: _this.props.useNativeAnimations\n      }, _this.props.animationOptions)).start(function (_ref3) {\n        var finished = _ref3.finished;\n        if (finished) {\n          if (toValue > 0 && _this.props.onSwipeableLeftOpen) {\n            _this.props.onSwipeableLeftOpen();\n          } else if (toValue < 0 && _this.props.onSwipeableRightOpen) {\n            _this.props.onSwipeableRightOpen();\n          }\n          if (toValue === 0) {\n            _this.props.onSwipeableClose && _this.props.onSwipeableClose();\n          } else {\n            _this.props.onSwipeableOpen && _this.props.onSwipeableOpen();\n          }\n        }\n      });\n      if (toValue > 0 && _this.props.onSwipeableLeftWillOpen) {\n        _this.props.onSwipeableLeftWillOpen();\n      } else if (toValue < 0 && _this.props.onSwipeableRightWillOpen) {\n        _this.props.onSwipeableRightWillOpen();\n      }\n      if (toValue === 0) {\n        _this.props.onSwipeableWillClose && _this.props.onSwipeableWillClose();\n      } else {\n        _this.props.onSwipeableWillOpen && _this.props.onSwipeableWillOpen();\n      }\n    };\n    _this._onRowLayout = function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n      _this.setState({\n        rowWidth: nativeEvent.layout.width\n      });\n    };\n    _this._currentOffset = function () {\n      var _this$state3 = _this.state,\n        _this$state3$leftWidt = _this$state3.leftWidth,\n        leftWidth = _this$state3$leftWidt === void 0 ? 0 : _this$state3$leftWidt,\n        _this$state3$rowWidth = _this$state3.rowWidth,\n        rowWidth = _this$state3$rowWidth === void 0 ? 0 : _this$state3$rowWidth,\n        rowState = _this$state3.rowState;\n      var _this$state$rightOffs2 = _this.state.rightOffset,\n        rightOffset = _this$state$rightOffs2 === void 0 ? rowWidth : _this$state$rightOffs2;\n      var rightWidth = rowWidth - rightOffset;\n      if (rowState === 1) {\n        return leftWidth;\n      } else if (rowState === -1) {\n        return -rightWidth;\n      }\n      return 0;\n    };\n    _this.close = function () {\n      _this._animateRow(_this._currentOffset(), 0);\n    };\n    _this.openLeft = function () {\n      var _this$state$leftWidth2 = _this.state.leftWidth,\n        leftWidth = _this$state$leftWidth2 === void 0 ? 0 : _this$state$leftWidth2;\n      _this._animateRow(_this._currentOffset(), leftWidth);\n    };\n    _this.openRight = function () {\n      var _this$state$rowWidth2 = _this.state.rowWidth,\n        rowWidth = _this$state$rowWidth2 === void 0 ? 0 : _this$state$rowWidth2;\n      var _this$state$rightOffs3 = _this.state.rightOffset,\n        rightOffset = _this$state$rightOffs3 === void 0 ? rowWidth : _this$state$rightOffs3;\n      var rightWidth = rowWidth - rightOffset;\n      _this._animateRow(_this._currentOffset(), -rightWidth);\n    };\n    var _dragX = new Animated.Value(0);\n    _this.state = {\n      dragX: _dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined\n    };\n    _this._updateAnimatedEvent(_props, _this.state);\n    _this._onGestureEvent = Animated.event([{\n      nativeEvent: {\n        translationX: _dragX\n      }\n    }], {\n      useNativeDriver: _props.useNativeAnimations\n    });\n    return _this;\n  }\n  _createClass(Swipeable, [{\n    key: \"UNSAFE_componentWillUpdate\",\n    value: function UNSAFE_componentWillUpdate(props, state) {\n      if (this.props.friction !== props.friction || this.props.overshootLeft !== props.overshootLeft || this.props.overshootRight !== props.overshootRight || this.props.overshootFriction !== props.overshootFriction || this.state.leftWidth !== state.leftWidth || this.state.rightOffset !== state.rightOffset || this.state.rowWidth !== state.rowWidth) {\n        this._updateAnimatedEvent(props, state);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var rowState = this.state.rowState;\n      var _this$props2 = this.props,\n        children = _this$props2.children,\n        renderLeftActions = _this$props2.renderLeftActions,\n        renderRightActions = _this$props2.renderRightActions;\n      var left = renderLeftActions && _jsxs(Animated.View, {\n        style: [styles.leftActions, {\n          transform: [{\n            translateX: this._leftActionTranslate\n          }]\n        }],\n        children: [renderLeftActions(this._showLeftAction, this._transX), _jsx(View, {\n          onLayout: function onLayout(_ref5) {\n            var nativeEvent = _ref5.nativeEvent;\n            return _this2.setState({\n              leftWidth: nativeEvent.layout.x\n            });\n          }\n        })]\n      });\n      var right = renderRightActions && _jsxs(Animated.View, {\n        style: [styles.rightActions, {\n          transform: [{\n            translateX: this._rightActionTranslate\n          }]\n        }],\n        children: [renderRightActions(this._showRightAction, this._transX), _jsx(View, {\n          onLayout: function onLayout(_ref6) {\n            var nativeEvent = _ref6.nativeEvent;\n            return _this2.setState({\n              rightOffset: nativeEvent.layout.x\n            });\n          }\n        })]\n      });\n      return _jsx(PanGestureHandler, _objectSpread(_objectSpread({\n        activeOffsetX: [-10, 10]\n      }, this.props), {}, {\n        onGestureEvent: this._onGestureEvent,\n        onHandlerStateChange: this._onHandlerStateChange,\n        children: _jsxs(Animated.View, {\n          onLayout: this._onRowLayout,\n          style: [styles.container, this.props.containerStyle],\n          children: [left, right, _jsx(TapGestureHandler, {\n            enabled: rowState !== 0,\n            onHandlerStateChange: this._onTapHandlerStateChange,\n            children: _jsx(Animated.View, {\n              pointerEvents: rowState === 0 ? 'auto' : 'box-only',\n              style: [{\n                transform: [{\n                  translateX: this._transX\n                }]\n              }, this.props.childrenContainerStyle],\n              children: children\n            })\n          })]\n        })\n      }));\n    }\n  }]);\n  return Swipeable;\n}(Component);\nSwipeable.defaultProps = {\n  friction: 1,\n  overshootFriction: 1,\n  useNativeAnimations: true\n};\nexport { Swipeable as default };\nvar styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  },\n  leftActions: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row'\n  }),\n  rightActions: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse'\n  })\n});","map":{"version":3,"names":["React","Component","Animated","StyleSheet","View","I18nManager","PanGestureHandler","TapGestureHandler","State","jsx","_jsx","jsxs","_jsxs","DRAG_TOSS","Swipeable","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","_updateAnimatedEvent","state","friction","overshootFriction","useNativeAnimations","dragX","rowTranslation","_state$leftWidth","leftWidth","_state$rowWidth","rowWidth","_state$rightOffset","rightOffset","rightWidth","Math","max","_props$overshootLeft","overshootLeft","_props$overshootRight","overshootRight","transX","add","interpolate","inputRange","outputRange","_transX","_showLeftAction","Value","_leftActionTranslate","Number","MIN_VALUE","extrapolate","_showRightAction","_rightActionTranslate","_onTapHandlerStateChange","_ref","nativeEvent","oldState","ACTIVE","close","_onHandlerStateChange","_ref2","_handleRelease","velocityX","translationX","_this$state","_this$state$leftWidth","_this$state$rowWidth","rowState","_this$state$rightOffs","_this$props","_this$props$leftThres","leftThreshold","_this$props$rightThre","rightThreshold","startOffsetX","_currentOffset","toValue","_animateRow","fromValue","_this$state2","setValue","setState","sign","spring","_objectSpread","restSpeedThreshold","restDisplacementThreshold","velocity","bounciness","useNativeDriver","animationOptions","start","_ref3","finished","onSwipeableLeftOpen","onSwipeableRightOpen","onSwipeableClose","onSwipeableOpen","onSwipeableLeftWillOpen","onSwipeableRightWillOpen","onSwipeableWillClose","onSwipeableWillOpen","_onRowLayout","_ref4","layout","width","_this$state3","_this$state3$leftWidt","_this$state3$rowWidth","_this$state$rightOffs2","openLeft","_this$state$leftWidth2","openRight","_this$state$rowWidth2","_this$state$rightOffs3","undefined","_onGestureEvent","event","_createClass","key","value","UNSAFE_componentWillUpdate","render","_this2","_this$props2","children","renderLeftActions","renderRightActions","left","style","styles","leftActions","transform","translateX","onLayout","_ref5","x","right","rightActions","_ref6","activeOffsetX","onGestureEvent","onHandlerStateChange","container","containerStyle","enabled","pointerEvents","childrenContainerStyle","defaultProps","default","create","overflow","absoluteFillObject","flexDirection","isRTL"],"sources":["/Users/luizclaudioarruda/Desktop/NLW_Happy2.0/mobile/node_modules/react-native-gesture-handler/Swipeable.js"],"sourcesContent":["// @flow\n\n// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us\n// to move faster and fix possible issues quicker\n\nimport React, { Component } from 'react';\nimport { Animated, StyleSheet, View, I18nManager } from 'react-native';\n\nimport { PanGestureHandler, TapGestureHandler, State } from './GestureHandler';\n\nconst DRAG_TOSS = 0.05;\n\nexport type PropType = {\n  children: any,\n  friction: number,\n  leftThreshold?: number,\n  rightThreshold?: number,\n  overshootLeft?: boolean,\n  overshootRight?: boolean,\n  overshootFriction: number,\n  onSwipeableLeftOpen?: Function,\n  onSwipeableRightOpen?: Function,\n  onSwipeableOpen?: Function,\n  onSwipeableClose?: Function,\n  onSwipeableLeftWillOpen?: Function,\n  onSwipeableRightWillOpen?: Function,\n  onSwipeableWillOpen?: Function,\n  onSwipeableWillClose?: Function,\n  renderLeftActions?: (\n    progressAnimatedValue: any,\n    dragAnimatedValue: any\n  ) => any,\n  renderRightActions?: (\n    progressAnimatedValue: any,\n    dragAnimatedValue: any\n  ) => any,\n  useNativeAnimations: boolean,\n  animationOptions?: Object,\n  containerStyle?: Object,\n  childrenContainerStyle?: Object,\n};\ntype StateType = {\n  dragX: Animated.Value,\n  rowTranslation: Animated.Value,\n  rowState: number,\n  leftWidth: number | typeof undefined,\n  rightOffset: number | typeof undefined,\n  rowWidth: number | typeof undefined,\n};\n\nexport default class Swipeable extends Component<PropType, StateType> {\n  static defaultProps = {\n    friction: 1,\n    overshootFriction: 1,\n    useNativeAnimations: true,\n  };\n  _onGestureEvent: ?Animated.Event;\n  _transX: ?Animated.Interpolation;\n  _showLeftAction: ?Animated.Interpolation | ?Animated.Value;\n  _leftActionTranslate: ?Animated.Interpolation;\n  _showRightAction: ?Animated.Interpolation | ?Animated.Value;\n  _rightActionTranslate: ?Animated.Interpolation;\n\n  constructor(props: PropType) {\n    super(props);\n    const dragX = new Animated.Value(0);\n    this.state = {\n      dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined,\n    };\n    this._updateAnimatedEvent(props, this.state);\n\n    this._onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragX } }],\n      { useNativeDriver: props.useNativeAnimations }\n    );\n  }\n\n  UNSAFE_componentWillUpdate(props: PropType, state: StateType) {\n    if (\n      this.props.friction !== props.friction ||\n      this.props.overshootLeft !== props.overshootLeft ||\n      this.props.overshootRight !== props.overshootRight ||\n      this.props.overshootFriction !== props.overshootFriction ||\n      this.state.leftWidth !== state.leftWidth ||\n      this.state.rightOffset !== state.rightOffset ||\n      this.state.rowWidth !== state.rowWidth\n    ) {\n      this._updateAnimatedEvent(props, state);\n    }\n  }\n\n  _updateAnimatedEvent = (props: PropType, state: StateType) => {\n    const { friction, overshootFriction, useNativeAnimations } = props;\n    const { dragX, rowTranslation, leftWidth = 0, rowWidth = 0 } = state;\n    const { rightOffset = rowWidth } = state;\n    const rightWidth = Math.max(0, rowWidth - rightOffset);\n\n    const {\n      overshootLeft = leftWidth > 0,\n      overshootRight = rightWidth > 0,\n    } = props;\n\n    const transX = Animated.add(\n      rowTranslation,\n      dragX.interpolate({\n        inputRange: [0, friction],\n        outputRange: [0, 1],\n      })\n    ).interpolate({\n      inputRange: [\n        -rightWidth - (overshootRight ? 1 : overshootFriction),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft ? 1 : overshootFriction),\n      ],\n      outputRange: [\n        -rightWidth - (overshootRight || overshootFriction > 1 ? 1 : 0),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft || overshootFriction > 1 ? 1 : 0),\n      ],\n    });\n    this._transX = transX;\n    this._showLeftAction =\n      leftWidth > 0\n        ? transX.interpolate({\n            inputRange: [-1, 0, leftWidth],\n            outputRange: [0, 0, 1],\n          })\n        : new Animated.Value(0);\n    this._leftActionTranslate = this._showLeftAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n    this._showRightAction =\n      rightWidth > 0\n        ? transX.interpolate({\n            inputRange: [-rightWidth, 0, 1],\n            outputRange: [1, 0, 0],\n          })\n        : new Animated.Value(0);\n    this._rightActionTranslate = this._showRightAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n  };\n\n  _onTapHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.close();\n    }\n  };\n\n  _onHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this._handleRelease(nativeEvent);\n    }\n  };\n\n  _handleRelease = nativeEvent => {\n    const { velocityX, translationX: dragX } = nativeEvent;\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    const {\n      friction,\n      leftThreshold = leftWidth / 2,\n      rightThreshold = rightWidth / 2,\n    } = this.props;\n\n    const startOffsetX = this._currentOffset() + dragX / friction;\n    const translationX = (dragX + DRAG_TOSS * velocityX) / friction;\n\n    let toValue = 0;\n    if (rowState === 0) {\n      if (translationX > leftThreshold) {\n        toValue = leftWidth;\n      } else if (translationX < -rightThreshold) {\n        toValue = -rightWidth;\n      }\n    } else if (rowState === 1) {\n      // swiped to left\n      if (translationX > -leftThreshold) {\n        toValue = leftWidth;\n      }\n    } else {\n      // swiped to right\n      if (translationX < rightThreshold) {\n        toValue = -rightWidth;\n      }\n    }\n\n    this._animateRow(startOffsetX, toValue, velocityX / friction);\n  };\n\n  _animateRow = (fromValue, toValue, velocityX) => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(fromValue);\n\n    this.setState({ rowState: Math.sign(toValue) });\n    Animated.spring(rowTranslation, {\n      restSpeedThreshold: 1.7,\n      restDisplacementThreshold: 0.4,\n      velocity: velocityX,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations,\n      ...this.props.animationOptions,\n    }).start(({ finished }) => {\n      if (finished) {\n        if (toValue > 0 && this.props.onSwipeableLeftOpen) {\n          this.props.onSwipeableLeftOpen();\n        } else if (toValue < 0 && this.props.onSwipeableRightOpen) {\n          this.props.onSwipeableRightOpen();\n        }\n\n        if (toValue === 0) {\n          this.props.onSwipeableClose && this.props.onSwipeableClose();\n        } else {\n          this.props.onSwipeableOpen && this.props.onSwipeableOpen();\n        }\n      }\n    });\n    if (toValue > 0 && this.props.onSwipeableLeftWillOpen) {\n      this.props.onSwipeableLeftWillOpen();\n    } else if (toValue < 0 && this.props.onSwipeableRightWillOpen) {\n      this.props.onSwipeableRightWillOpen();\n    }\n\n    if (toValue === 0) {\n      this.props.onSwipeableWillClose && this.props.onSwipeableWillClose();\n    } else {\n      this.props.onSwipeableWillOpen && this.props.onSwipeableWillOpen();\n    }\n  };\n\n  _onRowLayout = ({ nativeEvent }) => {\n    this.setState({ rowWidth: nativeEvent.layout.width });\n  };\n\n  _currentOffset = () => {\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    if (rowState === 1) {\n      return leftWidth;\n    } else if (rowState === -1) {\n      return -rightWidth;\n    }\n    return 0;\n  };\n\n  close = () => {\n    this._animateRow(this._currentOffset(), 0);\n  };\n\n  openLeft = () => {\n    const { leftWidth = 0 } = this.state;\n    this._animateRow(this._currentOffset(), leftWidth);\n  };\n\n  openRight = () => {\n    const { rowWidth = 0 } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    this._animateRow(this._currentOffset(), -rightWidth);\n  };\n\n  render() {\n    const { rowState } = this.state;\n    const { children, renderLeftActions, renderRightActions } = this.props;\n\n    const left = renderLeftActions && (\n      <Animated.View\n        style={[\n          styles.leftActions,\n          { transform: [{ translateX: this._leftActionTranslate }] },\n        ]}>\n        {renderLeftActions(this._showLeftAction, this._transX)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ leftWidth: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    const right = renderRightActions && (\n      <Animated.View\n        style={[\n          styles.rightActions,\n          { transform: [{ translateX: this._rightActionTranslate }] },\n        ]}>\n        {renderRightActions(this._showRightAction, this._transX)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ rightOffset: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    return (\n      <PanGestureHandler\n        activeOffsetX={[-10, 10]}\n        {...this.props}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}>\n        <Animated.View\n          onLayout={this._onRowLayout}\n          style={[styles.container, this.props.containerStyle]}>\n          {left}\n          {right}\n          <TapGestureHandler\n            enabled={rowState !== 0}\n            onHandlerStateChange={this._onTapHandlerStateChange}>\n            <Animated.View\n              pointerEvents={rowState === 0 ? 'auto' : 'box-only'}\n              style={[\n                {\n                  transform: [{ translateX: this._transX }],\n                },\n                this.props.childrenContainerStyle,\n              ]}>\n              {children}\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL? 'row-reverse': 'row',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n  },\n});\n"],"mappings":";;;;;;;;;;AAMA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,WAAA;AAGzC,SAASC,iBAAiB,EAAEC,iBAAiB,EAAEC,KAAK;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/E,IAAMC,SAAS,GAAG,IAAI;AAAC,IAwCFC,SAAS,aAAAC,UAAA;EAAAC,SAAA,CAAAF,SAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,SAAA;EAa5B,SAAAA,UAAYK,MAAe,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,SAAA;IAC3BM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,MAAK;IAAEC,KAAA,CAgCfG,oBAAoB,GAAG,UAACJ,KAAe,EAAEK,KAAgB,EAAK;MAAA,IACpDC,QAAQ,GAA6CN,KAAK,CAA1DM,QAAQ;QAAEC,iBAAiB,GAA0BP,KAAK,CAAhDO,iBAAiB;QAAEC,mBAAmB,GAAKR,KAAK,CAA7BQ,mBAAmB;MAAA,IAChDC,KAAK,GAAkDJ,KAAK,CAA5DI,KAAK;QAAEC,cAAc,GAAkCL,KAAK,CAArDK,cAAc;QAAAC,gBAAA,GAAkCN,KAAK,CAArCO,SAAS;QAATA,SAAS,GAAAD,gBAAA,cAAG,CAAC,GAAAA,gBAAA;QAAAE,eAAA,GAAmBR,KAAK,CAAtBS,QAAQ;QAARA,QAAQ,GAAAD,eAAA,cAAG,CAAC,GAAAA,eAAA;MAAA,IAAAE,kBAAA,GACvBV,KAAK,CAAhCW,WAAW;QAAXA,WAAW,GAAAD,kBAAA,cAAGD,QAAQ,GAAAC,kBAAA;MAC9B,IAAME,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,QAAQ,GAAGE,WAAW,CAAC;MAAC,IAAAI,oBAAA,GAKnDpB,KAAK,CAFPqB,aAAa;QAAbA,aAAa,GAAAD,oBAAA,cAAGR,SAAS,GAAG,CAAC,GAAAQ,oBAAA;QAAAE,qBAAA,GAE3BtB,KAAK,CADPuB,cAAc;QAAdA,cAAc,GAAAD,qBAAA,cAAGL,UAAU,GAAG,CAAC,GAAAK,qBAAA;MAGjC,IAAME,MAAM,GAAGzC,QAAQ,CAAC0C,GAAG,CACzBf,cAAc,EACdD,KAAK,CAACiB,WAAW,CAAC;QAChBC,UAAU,EAAE,CAAC,CAAC,EAAErB,QAAQ,CAAC;QACzBsB,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;MACpB,CAAC,CAAC,CACH,CAACF,WAAW,CAAC;QACZC,UAAU,EAAE,CACV,CAACV,UAAU,IAAIM,cAAc,GAAG,CAAC,GAAGhB,iBAAiB,CAAC,EACtD,CAACU,UAAU,EACXL,SAAS,EACTA,SAAS,IAAIS,aAAa,GAAG,CAAC,GAAGd,iBAAiB,CAAC,CACpD;QACDqB,WAAW,EAAE,CACX,CAACX,UAAU,IAAIM,cAAc,IAAIhB,iBAAiB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC/D,CAACU,UAAU,EACXL,SAAS,EACTA,SAAS,IAAIS,aAAa,IAAId,iBAAiB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAEhE,CAAC,CAAC;MACFN,KAAA,CAAK4B,OAAO,GAAGL,MAAM;MACrBvB,KAAA,CAAK6B,eAAe,GAClBlB,SAAS,GAAG,CAAC,GACTY,MAAM,CAACE,WAAW,CAAC;QACjBC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAEf,SAAS,CAAC;QAC9BgB,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;MACvB,CAAC,CAAC,GACF,IAAI7C,QAAQ,CAACgD,KAAK,CAAC,CAAC,CAAC;MAC3B9B,KAAA,CAAK+B,oBAAoB,GAAG/B,KAAA,CAAK6B,eAAe,CAACJ,WAAW,CAAC;QAC3DC,UAAU,EAAE,CAAC,CAAC,EAAEM,MAAM,CAACC,SAAS,CAAC;QACjCN,WAAW,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;QACxBO,WAAW,EAAE;MACf,CAAC,CAAC;MACFlC,KAAA,CAAKmC,gBAAgB,GACnBnB,UAAU,GAAG,CAAC,GACVO,MAAM,CAACE,WAAW,CAAC;QACjBC,UAAU,EAAE,CAAC,CAACV,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/BW,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;MACvB,CAAC,CAAC,GACF,IAAI7C,QAAQ,CAACgD,KAAK,CAAC,CAAC,CAAC;MAC3B9B,KAAA,CAAKoC,qBAAqB,GAAGpC,KAAA,CAAKmC,gBAAgB,CAACV,WAAW,CAAC;QAC7DC,UAAU,EAAE,CAAC,CAAC,EAAEM,MAAM,CAACC,SAAS,CAAC;QACjCN,WAAW,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;QACxBO,WAAW,EAAE;MACf,CAAC,CAAC;IACJ,CAAC;IAAAlC,KAAA,CAEDqC,wBAAwB,GAAG,UAAAC,IAAA,EAAqB;MAAA,IAAlBC,WAAW,GAAAD,IAAA,CAAXC,WAAW;MACvC,IAAIA,WAAW,CAACC,QAAQ,KAAKpD,KAAK,CAACqD,MAAM,EAAE;QACzCzC,KAAA,CAAK0C,KAAK,EAAE;MACd;IACF,CAAC;IAAA1C,KAAA,CAED2C,qBAAqB,GAAG,UAAAC,KAAA,EAAqB;MAAA,IAAlBL,WAAW,GAAAK,KAAA,CAAXL,WAAW;MACpC,IAAIA,WAAW,CAACC,QAAQ,KAAKpD,KAAK,CAACqD,MAAM,EAAE;QACzCzC,KAAA,CAAK6C,cAAc,CAACN,WAAW,CAAC;MAClC;IACF,CAAC;IAAAvC,KAAA,CAED6C,cAAc,GAAG,UAAAN,WAAW,EAAI;MAAA,IACtBO,SAAS,GAA0BP,WAAW,CAA9CO,SAAS;QAAgBtC,KAAK,GAAK+B,WAAW,CAAnCQ,YAAY;MAAA,IAAAC,WAAA,GACmBhD,KAAA,CAAKI,KAAK;QAAA6C,qBAAA,GAAAD,WAAA,CAApDrC,SAAS;QAATA,SAAS,GAAAsC,qBAAA,cAAG,CAAC,GAAAA,qBAAA;QAAAC,oBAAA,GAAAF,WAAA,CAAEnC,QAAQ;QAARA,QAAQ,GAAAqC,oBAAA,cAAG,CAAC,GAAAA,oBAAA;QAAEC,QAAQ,GAAAH,WAAA,CAARG,QAAQ;MAAA,IAAAC,qBAAA,GACVpD,KAAA,CAAKI,KAAK,CAArCW,WAAW;QAAXA,WAAW,GAAAqC,qBAAA,cAAGvC,QAAQ,GAAAuC,qBAAA;MAC9B,IAAMpC,UAAU,GAAGH,QAAQ,GAAGE,WAAW;MAAC,IAAAsC,WAAA,GAKtCrD,KAAA,CAAKD,KAAK;QAHZM,QAAQ,GAAAgD,WAAA,CAARhD,QAAQ;QAAAiD,qBAAA,GAAAD,WAAA,CACRE,aAAa;QAAbA,aAAa,GAAAD,qBAAA,cAAG3C,SAAS,GAAG,CAAC,GAAA2C,qBAAA;QAAAE,qBAAA,GAAAH,WAAA,CAC7BI,cAAc;QAAdA,cAAc,GAAAD,qBAAA,cAAGxC,UAAU,GAAG,CAAC,GAAAwC,qBAAA;MAGjC,IAAME,YAAY,GAAG1D,KAAA,CAAK2D,cAAc,EAAE,GAAGnD,KAAK,GAAGH,QAAQ;MAC7D,IAAM0C,YAAY,GAAG,CAACvC,KAAK,GAAGf,SAAS,GAAGqD,SAAS,IAAIzC,QAAQ;MAE/D,IAAIuD,OAAO,GAAG,CAAC;MACf,IAAIT,QAAQ,KAAK,CAAC,EAAE;QAClB,IAAIJ,YAAY,GAAGQ,aAAa,EAAE;UAChCK,OAAO,GAAGjD,SAAS;QACrB,CAAC,MAAM,IAAIoC,YAAY,GAAG,CAACU,cAAc,EAAE;UACzCG,OAAO,GAAG,CAAC5C,UAAU;QACvB;MACF,CAAC,MAAM,IAAImC,QAAQ,KAAK,CAAC,EAAE;QAEzB,IAAIJ,YAAY,GAAG,CAACQ,aAAa,EAAE;UACjCK,OAAO,GAAGjD,SAAS;QACrB;MACF,CAAC,MAAM;QAEL,IAAIoC,YAAY,GAAGU,cAAc,EAAE;UACjCG,OAAO,GAAG,CAAC5C,UAAU;QACvB;MACF;MAEAhB,KAAA,CAAK6D,WAAW,CAACH,YAAY,EAAEE,OAAO,EAAEd,SAAS,GAAGzC,QAAQ,CAAC;IAC/D,CAAC;IAAAL,KAAA,CAED6D,WAAW,GAAG,UAACC,SAAS,EAAEF,OAAO,EAAEd,SAAS,EAAK;MAAA,IAAAiB,YAAA,GACb/D,KAAA,CAAKI,KAAK;QAApCI,KAAK,GAAAuD,YAAA,CAALvD,KAAK;QAAEC,cAAc,GAAAsD,YAAA,CAAdtD,cAAc;MAC7BD,KAAK,CAACwD,QAAQ,CAAC,CAAC,CAAC;MACjBvD,cAAc,CAACuD,QAAQ,CAACF,SAAS,CAAC;MAElC9D,KAAA,CAAKiE,QAAQ,CAAC;QAAEd,QAAQ,EAAElC,IAAI,CAACiD,IAAI,CAACN,OAAO;MAAE,CAAC,CAAC;MAC/C9E,QAAQ,CAACqF,MAAM,CAAC1D,cAAc,EAAA2D,aAAA;QAC5BC,kBAAkB,EAAE,GAAG;QACvBC,yBAAyB,EAAE,GAAG;QAC9BC,QAAQ,EAAEzB,SAAS;QACnB0B,UAAU,EAAE,CAAC;QACbZ,OAAO,EAAPA,OAAO;QACPa,eAAe,EAAEzE,KAAA,CAAKD,KAAK,CAACQ;MAAmB,GAC5CP,KAAA,CAAKD,KAAK,CAAC2E,gBAAgB,EAC9B,CAACC,KAAK,CAAC,UAAAC,KAAA,EAAkB;QAAA,IAAfC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;QAClB,IAAIA,QAAQ,EAAE;UACZ,IAAIjB,OAAO,GAAG,CAAC,IAAI5D,KAAA,CAAKD,KAAK,CAAC+E,mBAAmB,EAAE;YACjD9E,KAAA,CAAKD,KAAK,CAAC+E,mBAAmB,EAAE;UAClC,CAAC,MAAM,IAAIlB,OAAO,GAAG,CAAC,IAAI5D,KAAA,CAAKD,KAAK,CAACgF,oBAAoB,EAAE;YACzD/E,KAAA,CAAKD,KAAK,CAACgF,oBAAoB,EAAE;UACnC;UAEA,IAAInB,OAAO,KAAK,CAAC,EAAE;YACjB5D,KAAA,CAAKD,KAAK,CAACiF,gBAAgB,IAAIhF,KAAA,CAAKD,KAAK,CAACiF,gBAAgB,EAAE;UAC9D,CAAC,MAAM;YACLhF,KAAA,CAAKD,KAAK,CAACkF,eAAe,IAAIjF,KAAA,CAAKD,KAAK,CAACkF,eAAe,EAAE;UAC5D;QACF;MACF,CAAC,CAAC;MACF,IAAIrB,OAAO,GAAG,CAAC,IAAI5D,KAAA,CAAKD,KAAK,CAACmF,uBAAuB,EAAE;QACrDlF,KAAA,CAAKD,KAAK,CAACmF,uBAAuB,EAAE;MACtC,CAAC,MAAM,IAAItB,OAAO,GAAG,CAAC,IAAI5D,KAAA,CAAKD,KAAK,CAACoF,wBAAwB,EAAE;QAC7DnF,KAAA,CAAKD,KAAK,CAACoF,wBAAwB,EAAE;MACvC;MAEA,IAAIvB,OAAO,KAAK,CAAC,EAAE;QACjB5D,KAAA,CAAKD,KAAK,CAACqF,oBAAoB,IAAIpF,KAAA,CAAKD,KAAK,CAACqF,oBAAoB,EAAE;MACtE,CAAC,MAAM;QACLpF,KAAA,CAAKD,KAAK,CAACsF,mBAAmB,IAAIrF,KAAA,CAAKD,KAAK,CAACsF,mBAAmB,EAAE;MACpE;IACF,CAAC;IAAArF,KAAA,CAEDsF,YAAY,GAAG,UAAAC,KAAA,EAAqB;MAAA,IAAlBhD,WAAW,GAAAgD,KAAA,CAAXhD,WAAW;MAC3BvC,KAAA,CAAKiE,QAAQ,CAAC;QAAEpD,QAAQ,EAAE0B,WAAW,CAACiD,MAAM,CAACC;MAAM,CAAC,CAAC;IACvD,CAAC;IAAAzF,KAAA,CAED2D,cAAc,GAAG,YAAM;MAAA,IAAA+B,YAAA,GAC6B1F,KAAA,CAAKI,KAAK;QAAAuF,qBAAA,GAAAD,YAAA,CAApD/E,SAAS;QAATA,SAAS,GAAAgF,qBAAA,cAAG,CAAC,GAAAA,qBAAA;QAAAC,qBAAA,GAAAF,YAAA,CAAE7E,QAAQ;QAARA,QAAQ,GAAA+E,qBAAA,cAAG,CAAC,GAAAA,qBAAA;QAAEzC,QAAQ,GAAAuC,YAAA,CAARvC,QAAQ;MAAA,IAAA0C,sBAAA,GACV7F,KAAA,CAAKI,KAAK,CAArCW,WAAW;QAAXA,WAAW,GAAA8E,sBAAA,cAAGhF,QAAQ,GAAAgF,sBAAA;MAC9B,IAAM7E,UAAU,GAAGH,QAAQ,GAAGE,WAAW;MACzC,IAAIoC,QAAQ,KAAK,CAAC,EAAE;QAClB,OAAOxC,SAAS;MAClB,CAAC,MAAM,IAAIwC,QAAQ,KAAK,CAAC,CAAC,EAAE;QAC1B,OAAO,CAACnC,UAAU;MACpB;MACA,OAAO,CAAC;IACV,CAAC;IAAAhB,KAAA,CAED0C,KAAK,GAAG,YAAM;MACZ1C,KAAA,CAAK6D,WAAW,CAAC7D,KAAA,CAAK2D,cAAc,EAAE,EAAE,CAAC,CAAC;IAC5C,CAAC;IAAA3D,KAAA,CAED8F,QAAQ,GAAG,YAAM;MAAA,IAAAC,sBAAA,GACW/F,KAAA,CAAKI,KAAK,CAA5BO,SAAS;QAATA,SAAS,GAAAoF,sBAAA,cAAG,CAAC,GAAAA,sBAAA;MACrB/F,KAAA,CAAK6D,WAAW,CAAC7D,KAAA,CAAK2D,cAAc,EAAE,EAAEhD,SAAS,CAAC;IACpD,CAAC;IAAAX,KAAA,CAEDgG,SAAS,GAAG,YAAM;MAAA,IAAAC,qBAAA,GACSjG,KAAA,CAAKI,KAAK,CAA3BS,QAAQ;QAARA,QAAQ,GAAAoF,qBAAA,cAAG,CAAC,GAAAA,qBAAA;MAAA,IAAAC,sBAAA,GACelG,KAAA,CAAKI,KAAK,CAArCW,WAAW;QAAXA,WAAW,GAAAmF,sBAAA,cAAGrF,QAAQ,GAAAqF,sBAAA;MAC9B,IAAMlF,UAAU,GAAGH,QAAQ,GAAGE,WAAW;MACzCf,KAAA,CAAK6D,WAAW,CAAC7D,KAAA,CAAK2D,cAAc,EAAE,EAAE,CAAC3C,UAAU,CAAC;IACtD,CAAC;IAjNC,IAAMR,MAAK,GAAG,IAAI1B,QAAQ,CAACgD,KAAK,CAAC,CAAC,CAAC;IACnC9B,KAAA,CAAKI,KAAK,GAAG;MACXI,KAAK,EAALA,MAAK;MACLC,cAAc,EAAE,IAAI3B,QAAQ,CAACgD,KAAK,CAAC,CAAC,CAAC;MACrCqB,QAAQ,EAAE,CAAC;MACXxC,SAAS,EAAEwF,SAAS;MACpBpF,WAAW,EAAEoF,SAAS;MACtBtF,QAAQ,EAAEsF;IACZ,CAAC;IACDnG,KAAA,CAAKG,oBAAoB,CAACJ,MAAK,EAAEC,KAAA,CAAKI,KAAK,CAAC;IAE5CJ,KAAA,CAAKoG,eAAe,GAAGtH,QAAQ,CAACuH,KAAK,CACnC,CAAC;MAAE9D,WAAW,EAAE;QAAEQ,YAAY,EAAEvC;MAAM;IAAE,CAAC,CAAC,EAC1C;MAAEiE,eAAe,EAAE1E,MAAK,CAACQ;IAAoB,CAAC,CAC/C;IAAC,OAAAP,KAAA;EACJ;EAACsG,YAAA,CAAA5G,SAAA;IAAA6G,GAAA;IAAAC,KAAA,WAAAC,2BAE0B1G,KAAe,EAAEK,KAAgB,EAAE;MAC5D,IACE,IAAI,CAACL,KAAK,CAACM,QAAQ,KAAKN,KAAK,CAACM,QAAQ,IACtC,IAAI,CAACN,KAAK,CAACqB,aAAa,KAAKrB,KAAK,CAACqB,aAAa,IAChD,IAAI,CAACrB,KAAK,CAACuB,cAAc,KAAKvB,KAAK,CAACuB,cAAc,IAClD,IAAI,CAACvB,KAAK,CAACO,iBAAiB,KAAKP,KAAK,CAACO,iBAAiB,IACxD,IAAI,CAACF,KAAK,CAACO,SAAS,KAAKP,KAAK,CAACO,SAAS,IACxC,IAAI,CAACP,KAAK,CAACW,WAAW,KAAKX,KAAK,CAACW,WAAW,IAC5C,IAAI,CAACX,KAAK,CAACS,QAAQ,KAAKT,KAAK,CAACS,QAAQ,EACtC;QACA,IAAI,CAACV,oBAAoB,CAACJ,KAAK,EAAEK,KAAK,CAAC;MACzC;IACF;EAAC;IAAAmG,GAAA;IAAAC,KAAA,WAAAE,OAAA,EAsLQ;MAAA,IAAAC,MAAA;MAAA,IACCxD,QAAQ,GAAK,IAAI,CAAC/C,KAAK,CAAvB+C,QAAQ;MAAA,IAAAyD,YAAA,GAC4C,IAAI,CAAC7G,KAAK;QAA9D8G,QAAQ,GAAAD,YAAA,CAARC,QAAQ;QAAEC,iBAAiB,GAAAF,YAAA,CAAjBE,iBAAiB;QAAEC,kBAAkB,GAAAH,YAAA,CAAlBG,kBAAkB;MAEvD,IAAMC,IAAI,GAAGF,iBAAiB,IAC5BtH,KAAA,CAACV,QAAQ,CAACE,IAAI;QACZiI,KAAK,EAAE,CACLC,MAAM,CAACC,WAAW,EAClB;UAAEC,SAAS,EAAE,CAAC;YAAEC,UAAU,EAAE,IAAI,CAACtF;UAAqB,CAAC;QAAE,CAAC,CAC1D;QAAA8E,QAAA,GACDC,iBAAiB,CAAC,IAAI,CAACjF,eAAe,EAAE,IAAI,CAACD,OAAO,CAAC,EACtDtC,IAAA,CAACN,IAAI;UACHsI,QAAQ,EAAE,SAAAA,SAAAC,KAAA;YAAA,IAAGhF,WAAW,GAAAgF,KAAA,CAAXhF,WAAW;YAAA,OACtBoE,MAAI,CAAC1C,QAAQ,CAAC;cAAEtD,SAAS,EAAE4B,WAAW,CAACiD,MAAM,CAACgC;YAAE,CAAC,CAAC;UAAA;QACnD,EACD;MAAA,EAEL;MAED,IAAMC,KAAK,GAAGV,kBAAkB,IAC9BvH,KAAA,CAACV,QAAQ,CAACE,IAAI;QACZiI,KAAK,EAAE,CACLC,MAAM,CAACQ,YAAY,EACnB;UAAEN,SAAS,EAAE,CAAC;YAAEC,UAAU,EAAE,IAAI,CAACjF;UAAsB,CAAC;QAAE,CAAC,CAC3D;QAAAyE,QAAA,GACDE,kBAAkB,CAAC,IAAI,CAAC5E,gBAAgB,EAAE,IAAI,CAACP,OAAO,CAAC,EACxDtC,IAAA,CAACN,IAAI;UACHsI,QAAQ,EAAE,SAAAA,SAAAK,KAAA;YAAA,IAAGpF,WAAW,GAAAoF,KAAA,CAAXpF,WAAW;YAAA,OACtBoE,MAAI,CAAC1C,QAAQ,CAAC;cAAElD,WAAW,EAAEwB,WAAW,CAACiD,MAAM,CAACgC;YAAE,CAAC,CAAC;UAAA;QACrD,EACD;MAAA,EAEL;MAED,OACElI,IAAA,CAACJ,iBAAiB,EAAAkF,aAAA,CAAAA,aAAA;QAChBwD,aAAa,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE;MAAE,GACrB,IAAI,CAAC7H,KAAK;QACd8H,cAAc,EAAE,IAAI,CAACzB,eAAgB;QACrC0B,oBAAoB,EAAE,IAAI,CAACnF,qBAAsB;QAAAkE,QAAA,EACjDrH,KAAA,CAACV,QAAQ,CAACE,IAAI;UACZsI,QAAQ,EAAE,IAAI,CAAChC,YAAa;UAC5B2B,KAAK,EAAE,CAACC,MAAM,CAACa,SAAS,EAAE,IAAI,CAAChI,KAAK,CAACiI,cAAc,CAAE;UAAAnB,QAAA,GACpDG,IAAI,EACJS,KAAK,EACNnI,IAAA,CAACH,iBAAiB;YAChB8I,OAAO,EAAE9E,QAAQ,KAAK,CAAE;YACxB2E,oBAAoB,EAAE,IAAI,CAACzF,wBAAyB;YAAAwE,QAAA,EACpDvH,IAAA,CAACR,QAAQ,CAACE,IAAI;cACZkJ,aAAa,EAAE/E,QAAQ,KAAK,CAAC,GAAG,MAAM,GAAG,UAAW;cACpD8D,KAAK,EAAE,CACL;gBACEG,SAAS,EAAE,CAAC;kBAAEC,UAAU,EAAE,IAAI,CAACzF;gBAAQ,CAAC;cAC1C,CAAC,EACD,IAAI,CAAC7B,KAAK,CAACoI,sBAAsB,CACjC;cAAAtB,QAAA,EACDA;YAAQ;UACK,EACE;QAAA;MACN,GACE;IAExB;EAAC;EAAA,OAAAnH,SAAA;AAAA,EAhSoCb,SAAS;AAA3Ba,SAAS,CACrB0I,YAAY,GAAG;EACpB/H,QAAQ,EAAE,CAAC;EACXC,iBAAiB,EAAE,CAAC;EACpBC,mBAAmB,EAAE;AACvB,CAAC;AAAA,SALkBb,SAAS,IAAA2I,OAAA;AAmS9B,IAAMnB,MAAM,GAAGnI,UAAU,CAACuJ,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,QAAQ,EAAE;EACZ,CAAC;EACDpB,WAAW,EAAA/C,aAAA,CAAAA,aAAA,KACNrF,UAAU,CAACyJ,kBAAkB;IAChCC,aAAa,EAAExJ,WAAW,CAACyJ,KAAK,GAAE,aAAa,GAAE;EAAK,EACvD;EACDhB,YAAY,EAAAtD,aAAA,CAAAA,aAAA,KACPrF,UAAU,CAACyJ,kBAAkB;IAChCC,aAAa,EAAExJ,WAAW,CAACyJ,KAAK,GAAG,KAAK,GAAG;EAAa;AAE5D,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}